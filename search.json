[{"title":"golang的静态资源服务与文件下载服务器","url":"/2020/12/19/FileServerAndStaticSourceServer/","content":"golang的静态资源服务器与文件服务器静态资源服务器静态资源一般指服务器发送到客户端的文件，常见的比如js、css、图片、音频等\n在golang中实现一个静态资源服务器十分简单\nhttp.Handle(&quot;/files/&quot;,             http.StripPrefix(&quot;/files/&quot;, http.FileServer(http.Dir(&quot;./tmp&quot;))))\n\n\n第一个参数”&#x2F;files&#x2F;“，代表静态资源请求的URL\n\nfunc StripPrefix(prefix string, h Handler) Handler\n 这个函数的官方解释如下\n\nStripPrefix returns a handler that serves HTTP requests by removing the given prefix from the request URL’s Path and invoking the handler h. StripPrefix handles a request for a path that doesn’t begin with prefix by replying with an HTTP 404 not found error.\n\n\n\n简单来说就是将请求的URL去掉前缀，并执行所给的handler\n\nfunc FileServer(root FileSystem) Handler\n\nFileServer returns a handler that serves HTTP requests with the contents of the file system rooted at root.\n\n 会以root为根路径，处理访问本地”&#x2F;tmp”文件夹的HTTP请求\n\nhttp.Dir 这实际上是一个类型转换，http.Dir(“&#x2F;tmp”)是利用本地tmp目录实现一个文件系统\n\n\n文件下载服务器区别就是，如果进行了一个文件下载的http请求，就会自动保存成文件主要就是对于http请求的一些请求头进行设置\n经测试，添加一下任意一个语句，就可以实现附件下载\nw.Header().Add(&quot;Content-Type&quot;, &quot;application/octet-stream&quot;)w.Header().Add(&quot;Content-Disposition&quot;, &quot;attachment; filename=\\&quot;&quot;+filename+&quot;\\&quot;&quot;)\n\n\n\n这里使用的 MIME(媒体类型  Multipurpose Internet Mail Extensions) 标准，浏览器通常使用MIME类型（而不是文件扩展名）来确定如何处理URL\n官网描述\n\napplication/octet-stream这是应用程序文件的默认值。意思是 *未知的应用程序文件 ，*浏览器一般不会自动执行或询问执行。浏览器会像对待 设置了HTTP头Content-Disposition 值为 attachment 的文件一样来对待这类文件。\n\n","categories":["golang"],"tags":["golang"]},{"title":"字节三周年","url":"/2024/06/26/bdThirdAnniversary/","content":"毕业三周年，字节三周年都说字节一年，人间三年，在字节的三年，积累了业界九年的开发经验。当然，这是玩笑话。但是这三年真的非常充实，是我看到外面世界的三年。\n要做怎样的人初中的时候，目标是考上高中；高中的时候，目标是考上大学；大学的时候，目标是找到工作；那么工作后，目标是什么？\n凡是过往，皆为序章抖音电商-实习-毕业前2021年2月27日，拿着家里面给的一万启动资金，独自出发，来到上海\n抖音电商Tiktok Shop","categories":["日记"],"tags":["日记"]},{"title":"那些年","url":"/2021/01/16/brothers/","content":"\n2016年6月10日\n2017年2月5日\n2017年6月10日\n2017年6月19日\n2017年7月31日\n2018年1月31日\n2018年2月7日\n2018年8月19日\n2019年2月11日\n2019年8月20日\n2020年1月22日\n2020年3月28日\n\n2016年6月10日下午六点多，我们的第一次聚餐，当时祥子在旅游，少他\n\n犹记得当时的空间直播\n2017年2月5日决战高考前的一聚看大家坚定地眼神好像是大家返校？\n\n\n大家一起去新湖唱露天KTV,可是现在被取缔了，视频还有，好像得找一找\n2017年6月10日依旧是下午六点多，高考已经结束了两天，我们出来疯狂。那时的我们，刚从十二年的战场中解放出来，享受着属于我们的BGM，但后来才知道，这只是个起点。\nps:有些人第一次骑小黄车\n当然不能落下另两位帅气的一中er\n我们干掉的啤酒！\n当时在看什么？我有些记不清了，但是当时一定很开心\n然后我们去体验了一下童年时的回忆\n还有逛运河那天晚上路过了小胡同，还见到了一张巨大的蜘蛛网O(∩_∩)O哈哈~\n还有，高考真的已经结束了，但是当时觉得还像是一场梦。高中三年的时光，大概是最美好的回忆了吧\n2017年6月19日班级聚会？散伙饭！敬爱的六位老师忘不了志军最后的身影\n从此20班的兄弟姐妹们各自东西\n2017年7月31日这一天的聚会还放不放照片？\n2018年1月31日上大学后大家第一次相聚萌萌的一张照片\n\n记得我把别人的电动车碰坏了，哥几个挺身而出救了我\n2018年2月7日20班第二次聚会，这次人就比上一次少了很多…\n2018年8月19日暑假一聚\n经典项目–吃辣椒！这人是谁？ktv醒酒项目\n2019年2月11日大二之后的第一次聚餐这人怎么带家属\n2019年8月20日萌萌回青岛准备建模了五缺一人，但是我们还是通过视频聚了一次还有，我们最后的操作了一下，成功全部喝多\n2020年1月22日大家还有半年就要大四了，升学的升学，找工作的找工作，都在努力奋斗啊大家一定能完成自己新一年的目标！\n2020年3月28日今天本来应该是祥子考试的前一天，可是被一场突如其来的疫情打乱了计划。\n希望疫情赶紧过去，大家都能够回到学校，完成自己的目标。\n","categories":["那些年"],"tags":["那些年"]},{"title":"Golang Mutex详细解析","url":"/2021/01/31/GolangMutex/","content":"\n本文为【极客时间】Go并发编程实战课 专栏 作者：晁岳攀（鸟窝）的学习笔记\n\nGolang Mutex详解mutex的作用是解决多线程并发安全问题，它保证在同一时刻，只能有一个线程对临界资源进行操作。\nGo标准库里面的Mutex经过不断迭代，逐步提高性能和公平性，演化成现在的版本。\n可以分为以下四个发展阶段:\n\n初版初版的实现非常简单，用一个flag变量标记当前的锁是否被某个goroutine所持有。\n// CAS操作，当时还没有抽象出atomic包func cas(val *int32, old, new int32) boolfunc semacquire(*int32)func semrelease(*int32)// 互斥锁的结构，包含两个字段type Mutex struct &#123;    key  int32 // 锁是否被持有的标识    sema int32 // 信号量专用，用以阻塞/唤醒goroutine&#125;// 保证成功在val上增加delta的值func xadd(val *int32, delta int32) (new int32) &#123;    for &#123;        v := *val        if cas(val, v, v+delta) &#123;            return v + delta        &#125;    &#125;    panic(&quot;unreached&quot;)&#125;// 请求锁func (m *Mutex) Lock() &#123;    if xadd(&amp;m.key, 1) == 1 &#123; //标识加1，如果等于1，成功获取到锁        return    &#125;    semacquire(&amp;m.sema) // 否则阻塞等待&#125;func (m *Mutex) Unlock() &#123;    if xadd(&amp;m.key, -1) == 0 &#123; // 将标识减去1，如果等于0，则没有其它等待者        return    &#125;    semrelease(&amp;m.sema) // 唤醒其它阻塞的goroutine&#125;    \n\nCAS指令是将给定的值和一个内存中的值进行比较，如果两值相同，就使用新的值替换内存地址中的值。注意，这个操作是原子性的。\nMutex 结构体中包含两个字段：\n\n**字段key：**是一个flag，用来标识这个排外锁是否被某个goroutine所持有，并记录当前持有和等待获取锁的goroutine的数量，如果大于等于1，说明和这个排外锁已经被持有。\n**字段sema：**是个信号量变量，用来控制goroutine的阻塞休眠和唤醒。\n\n\n\nLock请求锁：\n  通过xadd方法进行CAS操作，xadd方法通过循环执行CAS操作直到成功，保证对key加1的操作完成。\n  如果幸运，锁没有被别的goroutine持有，那么，Lock方法成功地将key设置为1，这个goroutine就持有了这个锁；如果锁已经被别的goroutine持有了，那么，当前的goroutine会把key加1，而且还会调用semacquire方法，使用信号量将自己休眠，等到信号量释放的，也就是锁释放的时候，信号量会将其唤醒。\n\nUnLock释放锁：\n  会将key减1。如果当前没有其他等待这个锁的goroutine，这个方法就返回了。但是，如果还有等待此锁的其它goroutine，那么，它会调用semrelease方法，利用信号量唤醒等的锁的其它goroutine中的一个。\n\n\nUnlock方法可以被任意的goroutine调用释放锁，即使是没有持有这个互斥锁的goroutine，也可以进行这个操作。这是因为，Mutex本身没有包含持有这把锁的goroutine的信息。所以，Unlock也不会对此进行检查。Mutex的这个设计一直保持到现在。\n由于这个设计，所以一般遵循”谁申请，谁释放“的原则，避免发生错误。\n初版的Mutex实现有一个问题：请求锁的goroutine会排队等待获取互斥锁。虽然这貌似很公平，但是从性能上来讲，却不是最优的。因为如果我们能够把锁交给正在占用CPU时间片的goroutine的话，在高并发的情况下，可能会有更好地性能（减少线程上下文的切换）（高并发主要关注吞吐量，对于公平性有时就要牺牲一些，参考Java中的公平锁和非公平锁）。\n给新人机会调整后的Mutex实现如下：\ntype Mutex struct &#123;    state int32    sema  uint32&#125;const (    mutexLocked = 1 &lt;&lt; iota // mutex is locked  值1    mutexWoken              // 值2    mutexWaiterShift = iota // 值2)\n\n其中的state已经改成了state，他的含义也不一样了。\n\nstate字段中的三个部分，一个字段包含多个意义，这样可以通过尽可能少的内存来实现互斥锁：\n\n第一位（最小的一位）来表示这个锁是否被持有\n第二位代表是否有唤醒的goroutine\n剩余的位数代表等待此锁的goroutine数量\n\n同样，Mutex的Lock和UnLock操作也变得复杂起来\nfunc (m *Mutex) Lock() &#123;    // Fast path: 幸运case，能够直接获取到锁    if atomic.CompareAndSwapInt32(&amp;m.state, 0, mutexLocked) &#123;        return    &#125;    awoke := false    for &#123;        old := m.state        new := old | mutexLocked // 新状态加锁        if old&amp;mutexLocked != 0 &#123;            new = old + 1&lt;&lt;mutexWaiterShift //等待者数量加一        &#125;        if awoke &#123;            // goroutine是被唤醒的，            // 新状态清除唤醒标志            // 先^ mutexWoken 再和 new 求 &amp;            new &amp;^= mutexWoken         &#125;        if atomic.CompareAndSwapInt32(&amp;m.state, old, new) &#123;//设置新状态            if old&amp;mutexLocked == 0 &#123; // 锁原状态未加锁                break            &#125;            runtime.Semacquire(&amp;m.sema) // 请求信号量            awoke = true        &#125;    &#125;&#125;\n\n\n对于Lock操作\n  首先通过CAS检测state字段中的标志，如果没有goroutine持有锁，也没有等待持有锁的goroutine，那么，当前的goroutine就很幸运，可以直接获取锁。\n  如果不够幸运，那么就通过一个循环进行检查。我们先要知道，如果想要获取锁的goroutine没有机会获取到锁，就会进行休眠，但是在锁释放唤醒之后，它并不能像先前一样直接获取锁，还是要和正在请求锁的goroutine进行竞争。这会给后来请求锁的goroutine一个机会，也让CPU中正在执行的goroutine有更多的机会获取到锁，在一定程度上提高了程序的性能。\n  for循环是不断尝试获取锁，如果获取不到，就通过runtime.Semacquire(&amp;m.sema)休眠，休眠醒来之后awoke置为true，尝试获取锁。\n  代码中的第10行将当前的flag设置为加锁状态，如果能成功地通过CAS把这个新值赋予state，就代表抢夺锁的操作成功了。\n\n\n","categories":["golang"],"tags":["并发"]},{"title":"愿所有的人都能被温柔以待","url":"/2021/05/12/internshipThought/","content":"来到上海实习已经两月有余，在这两个多月里，我见识到了魔都这座城市里各色各样的人。给我的感受是，每个人都在努力地奋斗着，去寻找属于自己的那份幸福。\n北上广不相信眼泪是真的，生活和工作的节奏很快，总感觉这个大都市里少了一些人与人之间的温暖，高额的房租和生活成本压得低收入者喘不过气，年薪几十万的所谓高收入者也很难靠自己的努力在上海定居，大多数人只能算是上海的一个过客。\n这座城市的确有魅力，因为即使这样，还是能让大多数人向往。\n货拉拉司机对我说，他住郊区800块一个月的房子，每天城市郊区来回跑。煎饼摊老板对我说，小同志，我想的就是白天赚够租金，晚上多搞一点钱。还有每天大早上就工作的环卫工人，每天拼命工作的上班族。很难想象这些人的背后到底肩负着什么，作为父母的责任、子女的责任。\n我们不是他们，永远不能完全理解他们的为什么选择在上海打拼。能做的，就是多传递一些温暖。\n","categories":["日记"],"tags":["日记"]},{"title":"大学回忆","url":"/2020/12/19/memoryOfUniversity/","content":"\n    \n\n\n回忆\n2017年那年的春夏，大概是人生最难忘的了，大家在一起，为了未知的未来而奋斗。拼搏努力，全力以赴。\n高考，成绩一般，但是还是很高兴，考上了一所一本，并如愿以偿地考取了计算机专业。那时，差三分，就能去天津上大学。\n那年的秋天，怀着激动的心来到吉林长春，对未知的大学生活充满了期待，毕竟是看过“微微一笑很倾城”的。结果学校的硬件给了我当头一棒，校园没有想象中的那么大，教室也没有想象中的那么华丽。\n但是，很幸运，认识了一群不同寻常的人。acm竞赛队选拔赛，是陪同学去参加的，结果，我阴差阳错的进入了。没想到，这会成为我大学最重要的转折点。\n大学一个学期结束了，未来的路该怎么走呢？真的很迷茫。\n\n\n2018年寒假开始进行训练，享受着一次次AC的快乐，但是题目对于我这种菜鸡来说，还是有点吃不消。大一下学期，稀里糊涂的参加了一场选拔赛，成绩还行，就稀里糊涂的参加了一场全国赛—4C（地点哈工大），我的成绩可谓相当惨烈。但是，去了哈工大的给我的震撼，让我意识到，大学远不止这些，还能更加精彩，尤其是哈工大食堂，好评！\n又过了一段时间，又参加了一场选拔赛，成绩队内第二，就又稀里糊涂地和第一、第三名组了一支大一队去参加东北赛。这是第二次来哈尔滨了，又有了和上次不一样的感觉。那场比赛，谭哥和我一人出了一道签到题，出的非常快，而且都是一发过，就这样，稀里糊涂地拿到了东北赛三等奖。人生第一次获奖。\n过了一段时间，省赛，很拉胯，很难受。但没想到一周后还有一件更难过的事情。……\n暑假，和谭哥参加了北京大学暑期学校。没想到，自己有一天居然能在北大学习，虽然只有短短的两周，但这两周，足以让我认识自己和优秀的人的差距，了解这世界顶尖学府的许多。至今难忘，那美丽的博雅塔、未名湖、美味的农园食堂、在未名湖的那一次夜跑。走之前还用北大校园卡，进入了清华，参观了有名的二校门。虽然自己和清北无缘，但是应该不少人小时候都纠结过以后去清华还是北大吧。\n下学期，因为缓考的原因，两门成绩不太理想，导致我保研的目标可能失败。\n所以，有半个学期没在训练，一直在死磕绩点。唉，这可能是我人生中最后悔的事情了吧。为啥呢？往下看。\n这一个学期，平平无奇，就这么过去了。\n2019年经过了一个寒假，想明白了，自己不能静下心做学术，不是读研的那块料，放弃了保研和考研的计划。也没想找工作啥的，就想着先拿到个奖，要对得起自己之前的努力。以后的事以后再说。\n上半年，又开始全力训练。自己上个学期，训练比别人少，会不会被踢啊？又参加了一场选拔赛，嗯，成绩还行，这下不会被踢了，那就安心训练吧。\n不久，有了第一次参加ACM全国赛的机会—ICPC西安邀请赛，开始努力备赛。那也是人生第一次坐那么长时间的硬卧，所以感觉很新奇，到了西安，落地后，先吃了一顿麦当劳，大家投票选的，其实我是想吃泡馍的。\n哇，温泉酒店，这么舒服吗，谁让西北工业大学在郊区，附近只有度假酒店呢。比赛了，全靠队友抬，拿了个铜奖，舒服。\n那周末还有省赛和东北赛，为了赶得上时间，做飞机从西安回长春，人生第一次坐飞机。嗯，省赛差一题一等奖，关键是最后一题公式已经凑出来了，对，是凑的，讲题的时候和标准答案一模一样，结果因为和队友沟通不到位，没写出来，痛失省一可惜。省赛和东北赛都是二等奖，全靠队友！谭哥、宁总牛逼！\n暑假到了，今年是我们的赛季，为了获奖，我们开始暑期训练，训练形式就是参加多校比赛，不断比赛、补题。大家一起经常做题做到三四点才睡，那时寝室已经进不去了，那咋办，睡机房！东北的夏天，晚上开着窗户睡，甚至还有点凉，就是蚊子有点多。就这样，大家一起坚持着，打完了暑期多校，期间我也刷完了《长安十二时辰》、《全职高手》这两部电视剧。那段时间里，每天刷题刷不动了，期盼着更新，是很大的慰藉了。\n肖教练，一个传奇般的人物，我的学长，因工作回到了长春，对肖教练的印象，还停留在18年上学期，带我们去参加东北师范大学校赛。\n肖教练请大家吃了顿饭，喝了个酒、唱k、网吧，从晚上六点到第二天早上六点，酒吧去了三个，大家都喝的很多。这大概就是青春的模样吧。\n我们的赛季到了，这个赛季很拉胯，没啥好说的，只拿到两个铜奖。\n最可惜的是CCPC哈尔滨站，最后只因为一发罚时，错失了铜牌，关键有两发还是写签到题贡献的，而且下一题已经有了正确思路，但是因为时间不够，最后没有写出来，铁三离场。心情很难受，还好有高中同学晨哥和昊哥，请我吃了顿九转小磨，还打了台球，在中国北端喝了蜜雪冰城，舒服了许多。那时，天气已经十分冷了。\n就这样，我大学生涯正式的赛季结束了。\n2020年寒假和谭哥、超哥组了个队，参加冬令营，备战来年的邀请赛。结果，成功劝退了我。\n我也就开始全心找工作了。\n开始学习一些网络等基础知识，因为打比赛拉下了很多。\n最终，决定学Java语言，因为好找工作。\n哇，怎么我啥都不会，啥是tcp、udp，啥是数据库索引，啥是锁，啥是进程、线程。还好，还没有精通这些知识的我，可能凭借做算法题，进入了快手和美团的hr面，最终因为美团有毁约黑历史，选择了快手。现在回忆一下，快手实习二面那个单调队列+手撕生成下一个序列的算法题，是我秋招和春招面的最难的题了。\n不久，就去快手实习了，开始菜鸡成长之路。\n学校通知保研流程启动，不抱希望并且不想读研的我提交了申请。\n这时候秋招开始了，第一个面试的是字节跳动，由于实习，没时间去背那些八股文，可以说，会的不多，运气比较好，通过了面试，秋招面试第一家企业，就拿到了意向书，开心。可惜，后来的阿里、腾讯一面挂，可惜，并且由于有了字节意向书，拒了很多笔试和面试，甚至作为六年老粉，拒掉了小米面试，因为真的很想去字节跳动。\n这时候九月初，我居然能保研了？不敢相信，最后综合成绩第九，去年11个保研的，保研资格板上钉钉。可是由于没有参加夏令营，失去了很多机会。\n读研还是工作，我也纠结了很久，心路历程十分复杂，最后老师催我确认是否保研的时候，我觉得自己不太适合读研，也不想浪费这个名额，就放弃了保研资格，就这样，一个幸运的人获得了我释放的保研资格。\n快手转正的意向书发放。手上有两个意向书了。\n实习的也很久了，也是比较紧张，想着还有比赛，赶上国庆，就请了长假从北京回到长春。回来参加本该在上半年举行的省赛和东北赛。省赛二等奖、东北赛一等奖。\n开始漫长的等offer之旅，等待快手和字节谈薪资，然后决定去哪里。就这样从十月中旬，一天天过去了，还是没有谈，拖到了十月末。\n30号晚上6点，快手hr打电话，报价本科白菜，其实是还能接受的价格，但是毕竟白菜价，心里有所不甘。\n怕快手回应日期前字节谈不了薪资，催了一下字节，结果，晚上十点半，我去打水，回来看到一个上海的未接电话，心里想，这应该是字节的电话，打回去，果然是，然后开始谈薪，一个sp。激动的心。\n得知谭哥周末要找超哥广州相聚，决定横插一腿，也去广州。\n忙了CCPC长春站的一些事情，周末因为南方之旅没法监考，比较可惜。\n南方之旅，超级好玩的，从中国北端飞到中国南端，见到了许久没见的人儿们，吃到了美味的粤菜，一起做着最酷的事情。\n未来字节的offer，是对我大学以来努力的一个认可，是一个比大学更累的新起点，未来还有试用期考验、裁员考验、35岁门槛，这只能靠自己继续努力了。嗨，这些都是后话了，干就完事了！\n结束要说后悔的事情也有，没有经常和家里联系。  \n前期为了保研而松懈训练，导致成绩不出色。如果再给我一次机会，我一定会更加努力，不再去刷绩点，抽空做更多的题，但是机会只有一次，过去了，就不会有了。\n大学里面，做的所有事情都是因为喜欢，没有很功利，我很幸运，想当初进入大学时吹的牛，现在都实现了，感觉这一切像梦一样，那么得不真实，这一路顺得，仿佛上辈子拯救了世界。\n感谢这一路上的每一个人。\n商怀朋     \n​    2020年11月12日  写于吉林长春\n","categories":["日记"],"tags":["日记","大学"]},{"title":"微博爬虫","url":"/2020/12/18/weiboSpider/","content":"微博爬虫本爬虫主要针对http://m.weibo.cn域名进行爬取\n\n 个人微博爬取\n 单条微博评论爬取\n 话题微博爬取\n\n\n\n返回的异常情况403 （未验证）：ip&#x2F;cookie 被限制\n302（未验证）：cookie未设置\n微博爬虫接口分析评论接口URL: http://m.weibo.cn/api/comments/show?id=4583529432489890&amp;page=4\n\n\n\n字段名\n意义\n\n\n\nid\n要爬取的微博id\n\n\npage\n第几页\n\n\n经测试，最多爬取50页数据，目前没有接触爬取限制的方法，哭唧唧\n","categories":["爬虫"],"tags":["爬虫"]},{"title":"my-first-blog","url":"/2020/12/18/my-first-blog/","content":"你好，世界！\n"}]